{"version":3,"file":"static/js/247.ab9462c2.chunk.js","mappings":"+NAwDA,UApDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6GAEaC,EAAAA,EAAAA,KAASJ,GAFtB,OAEJK,EAFI,OAGVN,EAAQM,GAHE,gDAKVC,QAAQC,IAAR,MALU,yDAAH,qDAQXJ,GAED,GAAE,KAKD,wBACGL,EAAKU,KAAI,SAACC,EAAGC,GAAJ,OACR,0BACGD,EAAE,cACD,gBACEE,IAAG,yCAAoCF,EAAE,cACzCG,IAAKH,EAAGI,KACRC,MAAM,QACNC,OAAO,WAGT,gBACEJ,IAAI,iGACJC,IAAI,WACJE,MAAM,QACNC,OAAO,WAGX,4BACE,0BACE,kCADF,IACiBN,EAAGI,SAEpB,0BACE,uCADF,IACsBJ,EAAGO,kBArBpBP,EAAGQ,GAAKP,EADT,KA6Bf,C,mHCpDKQ,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAAzB,6DAEMC,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,IAAAA,IAAAA,EAAAA,MAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,OAAAA,eAAAA,KAAAA,EAAAA,CAAAA,UAAAA,EAAAA,MACM,iEACD,uEACD,gBAIRC,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAQ,WAAMC,GAAN,uFACgBH,IAAAA,IAAA,kBACjB,EADiB,0BACMD,EADN,iBACsBI,IAFtC,cACAC,EADA,yBAICA,EAAQzB,KAAK0B,SAJd,8FAARH,GAAQ,KASRI,OAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAS,WAAOC,EAAOJ,GAAd,uFACeH,IAAAA,IAAA,kBACjB,EADiB,0BACOD,EADP,kBACwBQ,EADxB,iBACsCJ,IAFrD,cACDC,EADC,yBAIAA,EAAQzB,MAJR,gGAAT2B,GAAS,KASTE,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMV,GAAN,uFACcE,IAAAA,IAAA,kBAAa,EAAb,kBAA2BF,EAA3B,oBAAyCC,IADvD,cACFK,EADE,yBAGDA,EAAQzB,MAHP,8FAAV6B,GAAU,KAQVC,KAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAO,WAAMX,GAAN,uFACiBE,IAAAA,IAAA,kBACjB,EADiB,kBACHF,EADG,4BACmBC,IAFpC,cACCK,EADD,yBAKEA,EAAQzB,KAAK8B,MALf,8FAAPA,GAAO,KAUPC,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMZ,GAAN,uFACcE,IAAAA,IAAA,kBACjB,EADiB,kBACHF,EADG,4BACmBC,IAFjC,cACFK,EADE,yBAKDA,EAAQzB,KAAK0B,SALZ,8FAAVK,EAAU,IASNzB,EAAM,IAAIgB,EAEhB,K","sources":["components/Cast/Cast.jsx","resource/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'resource/Api';\n\nconst Cast = () => {\n  const [data, setData] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await api.cast(movieId);\n        setData(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n    // eslint-disable-next-line\n  }, []);\n\n \n\n  return (\n    <ul>\n      {data.map((el,idx) => (\n        <li key={el.id + idx}>\n          {el['profile_path'] ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${el['profile_path']}`}\n              alt={el.name}\n              width=\"200px\"\n              height=\"300px\"\n            />\n          ) : (\n            <img\n              src=\"https://as2.ftcdn.net/v2/jpg/03/25/37/33/1000_F_325373321_nq44026wWts7e0C2DMjQqV7kdHEKRn14.jpg\"\n              alt=\"notPhoto\"\n              width=\"200px\"\n              height=\"300px\"\n            />\n          )}\n          <div>\n            <p>\n              <b>Name: </b> {el.name}\n            </p>\n            <p>\n              <b>Character: </b> {el.character}\n            </p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = '133390594699e864d9dd1aebf0535707';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nclass dataFetchApi {\n  #SEARCH = 'search/movie';\n  #TRAND = 'trending/movie/day';\n  #BASE = 'movie/';\n\n  //? Home trend\n\n  trend = async page => {\n    const respons = await axios.get(\n      `${this.#TRAND}?api_key=${API_KEY}&page=${page}`\n    );\n    return respons.data.results;\n  };\n\n  //? search form\n\n  search = async (query, page) => {\n    const respons = await axios.get(\n      `${this.#SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`\n    );\n    return respons.data;\n  };\n\n  //? fetchId\n\n  fetchId = async id => {\n    const respons = await axios.get(`${this.#BASE}/${id}?api_key=${API_KEY}`);\n\n    return respons.data;\n  };\n\n  //? Cast\n\n  cast = async id => {\n    const respons = await axios.get(\n      `${this.#BASE}/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return respons.data.cast;\n  };\n\n  //? Reviews\n\n  reviews = async id => {\n    const respons = await axios.get(\n      `${this.#BASE}/${id}/reviews?api_key=${API_KEY}`\n    );\n\n    return respons.data.results;\n  };\n}\n\nconst api = new dataFetchApi();\n\nexport default api;"],"names":["useState","data","setData","movieId","useParams","useEffect","fetch","api","response","console","log","map","el","idx","src","alt","name","width","height","character","id","API_KEY","axios","dataFetchApi","trend","page","respons","results","search","query","fetchId","cast","reviews"],"sourceRoot":""}